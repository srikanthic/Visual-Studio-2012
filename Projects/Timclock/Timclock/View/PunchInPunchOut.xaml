<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d" x:Class="Timclock.View.PunchInPunchOut"
        Title="PunchInPunchOut" Closing="Window_Closing" WindowStyle="None" 
    WindowStartupLocation="CenterScreen" Background="Transparent" Width="400" MouseLeftButtonDown="PunchInPunchOut_OnMouseLeftButtonDown" Foreground="White" OpacityMask="Black" MouseDoubleClick="Window_MouseDoubleClick" FontSize="16" FontWeight="Bold">
    <Window.Resources>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <Style x:Key="Closebuttenstyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Opacity" TargetName="border" Value="0.8"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true"/>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="Punch BStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.DesktopBrushKey}}"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderThickness" Value="2"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" SnapsToDevicePixels="true" Background="#FF0C0C0E" BorderBrush="#FF14194B" BorderThickness="1" Margin="5" Padding="5">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="40,10"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                <Setter Property="Background" Value="{x:Null}"/>
                                <Setter Property="BorderBrush" Value="{x:Null}"/>
                                <Setter Property="Foreground" Value="White"/>
                                <Setter Property="BorderThickness" Value="0"/>
                                <Setter Property="Effect" TargetName="border">
                                	<Setter.Value>
                                		<DropShadowEffect/>
                                	</Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="BorderBrush" Value="{x:Null}"/>
                                <Setter Property="Foreground" Value="Black"/>
                                <Setter Property="BorderThickness" Value="0"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#FF4B4B4B"/>
                                <Setter Property="BorderThickness" TargetName="border" Value="2"/>
                                <Setter Property="Effect" TargetName="border">
                                    <Setter.Value>
                                        <DropShadowEffect/>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Background" Value="White"/>
                                <Setter Property="Background" TargetName="border" Value="White"/>
                                <Setter Property="Margin" TargetName="contentPresenter" Value="40,10"/>
                                <Setter Property="Width" TargetName="contentPresenter" Value="Auto"/>
                                <Setter Property="Height" TargetName="contentPresenter" Value="Auto"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" Value="{x:Null}"/>
                                <Setter Property="BorderBrush" Value="{x:Null}"/>
                                <Setter Property="Foreground" Value="#FFDCCCCC"/>
                                <Setter Property="BorderThickness" Value="0"/>
                                <Setter Property="Effect">
                                    <Setter.Value>
                                        <DropShadowEffect/>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Effect" TargetName="border">
                                	<Setter.Value>
                                		<DropShadowEffect/>
                                	</Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                                <Setter Property="Background" Value="{x:Null}"/>
                                <Setter Property="BorderBrush" Value="{x:Null}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{x:Null}"/>
                                <Setter Property="Background" TargetName="border" Value="{x:Null}"/>
                                <Setter Property="Foreground" Value="#FF005281"/>
                                <Setter Property="BorderThickness" Value="0"/>
                                <Setter Property="Effect" TargetName="border">
                                	<Setter.Value>
                                		<DropShadowEffect/>
                                	</Setter.Value>
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Effect">
            	<Setter.Value>
            		<DropShadowEffect/>
            	</Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Window.Effect>
        <DropShadowEffect ShadowDepth="10" BlurRadius="10"/>
    </Window.Effect>
    <Grid Background="#00000000">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="49*"/>
            <ColumnDefinition Width="645*"/>
            <ColumnDefinition Width="66*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="18*"/>
            <RowDefinition Height="491*"/>
            <RowDefinition Height="18*"/>
        </Grid.RowDefinitions>
        <Rectangle Grid.ColumnSpan="3" Grid.RowSpan="3" Stroke="Black">
            <Rectangle.Fill>
                <LinearGradientBrush EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
                    <GradientStop Color="#87014B4B" Offset="1"/>
                    <GradientStop Color="#FF1CCFCF"/>
                </LinearGradientBrush>
            </Rectangle.Fill>
        </Rectangle>
        <Button Content="" Grid.Column="2" Grid.Row="0" Click="Button_Click_2" Style="{DynamicResource Closebuttenstyle}">
            <Button.Background>
                <ImageBrush ImageSource="wifi_2.png"/>
            </Button.Background>
        </Button>
        <Grid Grid.Row="1" Grid.Column="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="297*"/>
                <RowDefinition Height="193*"/>
            </Grid.RowDefinitions>
            <Grid  Grid.Row="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="2*"/>
                </Grid.ColumnDefinitions>
                <StackPanel Grid.Column="0" >
                    <TextBlock TextWrapping="Wrap" HorizontalAlignment="Right" Text="Name :" Margin="10,10,10,0" />
                    <TextBlock TextWrapping="Wrap" Text="Badge ID :" HorizontalAlignment="Right" Margin="10,10,10,0" />

                </StackPanel>
                <StackPanel Grid.Column="1">
                    <TextBlock x:Name="Name" TextWrapping="Wrap" Text="" Margin="10,10,10,0" />
                    <TextBlock x:Name="Badge" TextWrapping="Wrap" Text="" Margin="10,10,10,0"/>
                </StackPanel>
            </Grid>
            <!--<Grid Margin="0,122,0,131" >
                <TextBlock Height="23" TextWrapping="Wrap" Text="Associate__c" Margin="0,10,214,84"/>
                <TextBlock Height="23" TextWrapping="Wrap" Text="Punch_In__c" Margin="0,38,214,56"/>
                <TextBlock Height="23" TextWrapping="Wrap" Text="Punch_Out__c" Margin="0,69,214,24"/>
                <TextBlock Height="23" TextWrapping="Wrap" Text="Date__c" Margin="0,93,214,0"/>
                <TextBlock x:Name="Associate__c" Height="23" TextWrapping="Wrap" Text="" Margin="114,10,19,83"/>
                <TextBlock x:Name="Punch_In__c" Height="23" TextWrapping="Wrap" Text="" Margin="113,38,19,55"/>
                <TextBlock x:Name="Punch_Out__c" Height="23" TextWrapping="Wrap" Text="" Margin="113,69,19,24"/>
                <TextBlock x:Name="Date__c" Height="23" TextWrapping="Wrap" Text="" Margin="113,93,19,0"/>
            </Grid>-->
            <Grid VerticalAlignment="Bottom" Grid.Row="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <StackPanel Grid.Column="0" Margin="0,0,0,5">
                    <StackPanel.Resources>
                        <Style TargetType="{x:Type Button}">
                            <Setter Property="Margin" Value="0,5,0,5"/>
                        </Style>
                    </StackPanel.Resources>
                    <Button Content="Punch In"  Click="Button_Click" Style="{DynamicResource 'Punch BStyle'}"/>
                    <Button Content="Brake In" Click="Button_Click" Style="{DynamicResource 'Punch BStyle'}"/>
                    <Button Content="Lunch In"  Click="Button_Click" Style="{DynamicResource 'Punch BStyle'}"/>
                </StackPanel>
                <StackPanel Grid.Column="1" Margin="0,0,0,5">
                    <StackPanel.Resources>
                        <Style TargetType="{x:Type Button}">
                            <Setter Property="Margin" Value="0,5,0,5"/>
                        </Style>
                    </StackPanel.Resources>
                    <Button Content="Punch Out"  Click="Button_Click_1" Style="{DynamicResource 'Punch BStyle'}"/>
                    <Button Content="Brake Out"  Click="Button_Click_1" Style="{DynamicResource 'Punch BStyle'}"/>
                    <Button Content="Lunch Out"  Click="Button_Click_1" Style="{DynamicResource 'Punch BStyle'}"/>
                </StackPanel>
            </Grid>
        </Grid>
    </Grid>
</Window>
